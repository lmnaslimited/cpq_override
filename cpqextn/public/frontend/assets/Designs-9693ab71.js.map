{"version":3,"file":"Designs-9693ab71.js","sources":["../../../../frontend/src/components/ListViews/DesignsListView.vue","../../../../frontend/src/cpqUtils.js","../../../../frontend/src/components/CpqFields.vue","../../../../frontend/src/components/Modals/DesignModal.vue","../../../../frontend/src/pages/Designs.vue"],"sourcesContent":["<template>\n  <ListView\n    :class=\"$attrs.class\"\n    :columns=\"columns\"\n    :rows=\"rows\"\n    :options=\"{\n      getRowRoute: (row) => ({\n        name: 'Design',\n        params: { designId: row.name },\n        query: { view: route.query.view, viewType: route.params.viewType },\n      }),\n      selectable: options.selectable,\n      showTooltip: options.showTooltip,\n      resizeColumn: options.resizeColumn,\n    }\"\n    row-key=\"name\"\n  >\n    <ListHeader\n      class=\"sm:mx-5 mx-3\"\n      @columnWidthUpdated=\"emit('columnWidthUpdated')\"\n    >\n      <ListHeaderItem\n        v-for=\"column in columns\"\n        :key=\"column.key\"\n        :item=\"column\"\n        @columnWidthUpdated=\"emit('columnWidthUpdated', column)\"\n      >\n        <Button\n          v-if=\"column.key == '_liked_by'\"\n          variant=\"ghosted\"\n          class=\"!h-4\"\n          :class=\"isLikeFilterApplied ? 'fill-red-500' : 'fill-white'\"\n          @click=\"() => emit('applyLikeFilter')\"\n        >\n          <HeartIcon class=\"h-4 w-4\" />\n        </Button>\n      </ListHeaderItem>\n    </ListHeader>\n    <ListRows :rows=\"rows\" v-slot=\"{ idx, column, item, row }\">\n      <div v-if=\"column.key === '_assign'\" class=\"flex items-center\">\n        <MultipleAvatar\n          :avatars=\"item\"\n          size=\"sm\"\n          @click=\"\n            (event) =>\n              emit('applyFilter', {\n                event,\n                idx,\n                column,\n                item,\n                firstColumn: columns[0],\n              })\n          \"\n        />\n      </div>\n      <ListRowItem v-else :item=\"item\">\n        <template #prefix>\n          <div v-if=\"column.key === 'status'\">\n            <IndicatorIcon :class=\"item.color\" />\n          </div>\n          <div v-else-if=\"column.key === 'name'\">\n            <Avatar\n              v-if=\"item.label\"\n              class=\"flex items-center\"\n              :image=\"item.image\"\n              :label=\"item.image_label\"\n              size=\"sm\"\n            />\n          </div>\n          <div v-else-if=\"column.key === 'organization'\">\n            <Avatar\n              v-if=\"item\"\n              class=\"flex items-center\"\n              :image=\"item\"\n              :label=\"item\"\n              size=\"sm\"\n            />\n          </div>\n          <div v-else-if=\"column.key === 'owner'\">\n            <Avatar\n              v-if=\"item.full_name\"\n              class=\"flex items-center\"\n              :image=\"item.user_image\"\n              :label=\"item.full_name\"\n              size=\"sm\"\n            />\n          </div>\n          \n        </template>\n        <template #default=\"{ label }\">\n          <div\n            v-if=\"\n              [\n                'modified',\n                'creation',\n                'first_response_time',\n                'first_responded_on',\n                'response_by',\n              ].includes(column.key)\n            \"\n            class=\"truncate text-base\"\n            @click=\"\n              (event) =>\n                emit('applyFilter', {\n                  event,\n                  idx,\n                  column,\n                  item,\n                  firstColumn: columns[0],\n                })\n            \"\n          >\n            <Tooltip :text=\"item.label\">\n              <div>{{ item.timeAgo }}</div>\n            </Tooltip>\n          </div>\n          <div v-else-if=\"column.key === '_liked_by'\">\n            <Button\n              v-if=\"column.key == '_liked_by'\"\n              variant=\"ghosted\"\n              :class=\"isLiked(item) ? 'fill-red-500' : 'fill-white'\"\n              @click.stop.prevent=\"\n                () =>\n                  emit('likeDoc', {\n                    name: row.name,\n                    liked: isLiked(item),\n                  })\n              \"\n            >\n              <HeartIcon class=\"h-4 w-4\" />\n            </Button>\n          </div>\n          <div\n            v-else-if=\"column.key === 'sla_status'\"\n            class=\"truncate text-base\"\n          >\n            <Badge\n              v-if=\"item.value\"\n              :variant=\"'subtle'\"\n              :theme=\"item.color\"\n              size=\"md\"\n              :label=\"item.value\"\n              @click=\"\n                (event) =>\n                  emit('applyFilter', {\n                    event,\n                    idx,\n                    column,\n                    item,\n                    firstColumn: columns[0],\n                  })\n              \"\n            />\n          </div>\n          <div v-else-if=\"column.type === 'Check'\">\n            <FormControl\n              type=\"checkbox\"\n              :modelValue=\"item\"\n              :disabled=\"true\"\n              class=\"text-gray-900\"\n            />\n          </div>\n          <div\n            v-else\n            class=\"truncate text-base\"\n            @click=\"\n              (event) =>\n                emit('applyFilter', {\n                  event,\n                  idx,\n                  column,\n                  item,\n                  firstColumn: columns[0],\n                })\n            \"\n          >\n            {{ label }}\n          </div>\n        </template>\n      </ListRowItem>\n    </ListRows>\n    <ListSelectBanner>\n      <template #actions=\"{ selections, unselectAll }\">\n        <Dropdown\n          :options=\"listBulkActionsRef.bulkActions(selections, unselectAll)\"\n        >\n          <Button icon=\"more-horizontal\" variant=\"ghost\" />\n        </Dropdown>\n      </template>\n    </ListSelectBanner>\n  </ListView>\n  <ListFooter\n    v-if=\"pageLengthCount\"\n    class=\"border-t sm:px-5 px-3 py-2\"\n    v-model=\"pageLengthCount\"\n    :options=\"{\n      rowCount: options.rowCount,\n      totalCount: options.totalCount,\n    }\"\n    @loadMore=\"emit('loadMore')\"\n  />\n  <ListBulkActions ref=\"listBulkActionsRef\" v-model=\"list\" doctype=\"Design\" />\n</template>\n\n<script setup>\nimport HeartIcon from '@/components/Icons/HeartIcon.vue'\nimport IndicatorIcon from '@/components/Icons/IndicatorIcon.vue'\nimport PhoneIcon from '@/components/Icons/PhoneIcon.vue'\nimport MultipleAvatar from '@/components/MultipleAvatar.vue'\nimport ListBulkActions from '@/components/ListBulkActions.vue'\nimport ListRows from '@/components/ListViews/ListRows.vue'\nimport {\n  Avatar,\n  ListView,\n  ListHeader,\n  ListHeaderItem,\n  ListSelectBanner,\n  ListRowItem,\n  ListFooter,\n  Dropdown,\n  Tooltip,\n} from 'frappe-ui'\nimport { sessionStore } from '@/stores/session'\nimport { ref, computed, watch } from 'vue'\nimport { useRoute } from 'vue-router'\n\nconst props = defineProps({\n  rows: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Array,\n    required: true,\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      selectable: true,\n      showTooltip: true,\n      resizeColumn: false,\n      totalCount: 0,\n      rowCount: 0,\n    }),\n  },\n})\n\nconst emit = defineEmits([\n  'loadMore',\n  'updatePageCount',\n  'columnWidthUpdated',\n  'applyFilter',\n  'applyLikeFilter',\n  'likeDoc',\n])\n\nconst route = useRoute()\n\nconst pageLengthCount = defineModel()\nconst list = defineModel('list')\n\nconst isLikeFilterApplied = computed(() => {\n  return list.value.params?.filters?._liked_by ? true : false\n})\n\nconst { user } = sessionStore()\n\nfunction isLiked(item) {\n  if (item) {\n    let likedByMe = JSON.parse(item)\n    return likedByMe.includes(user)\n  }\n}\n\nwatch(pageLengthCount, (val, old_value) => {\n  if (val === old_value) return\n  emit('updatePageCount', val)\n})\n\nconst listBulkActionsRef = ref(null)\n\ndefineExpose({\n  customListActions: computed(\n    () => listBulkActionsRef.value?.customListActions,\n  ),\n})\n</script>","export const validateRangeIncrement = (name, value, min, max, step) => {\n    const numValue = parseFloat(value)\n    const numMin = parseFloat(min)\n    const numMax = parseFloat(max)\n    const numStep = parseFloat(step)\n  \n    // Validate if the value is numeric\n    if (!/^\\d*\\.?\\d*$/.test(value)) return 'Invalid Input.'\n  \n    // Validate if the value is within min and max range\n    if (numValue < numMin || numValue > numMax) return `Value should be between ${min} and ${max}`\n  \n    // Handle decimal places for step validation\n    const stepDecimalPlaces = (step.toString().split('.')[1]?.length) || 0\n    const valueDecimalPlaces = (value.toString().includes('.') ? value.split('.')[1].length : 0) || 0\n  \n    // Validate if the value follows the step increment\n    if (stepDecimalPlaces > 0) {\n      if (numValue === numMin || numValue === numMax) return null\n      if (valueDecimalPlaces !== stepDecimalPlaces) return `Value should increment by ${step}`\n    } else {\n      if (value.toString().includes('.') && value.toString().split('.')[1].length === 0) return 'Invalid Input.'\n      if ((numValue - numMin) % numStep !== 0) return `Value should increment by ${step}`\n    }\n  \n    return null\n  }\n  ","<template>\n  <Fields :sections=\"sections\" :data=\"data\">\n    <template #custom-fields=\"{ field, data }\">\n      <!-- Custom fields for Design CPQ -->\n      <div v-if=\"field.type === 'Range'\">\n        <input\n          type=\"range\"\n          :class=\"field.name\"\n          :min=\"field.min\"\n          :max=\"field.max\"\n          :step=\"field.step\"\n          v-model=\"data[field.name]\"\n          @input=\"updateRangeDisplay(field.name, $event.target.value)\"\n          @change=\"handleRangeChange(field.name, $event.target.value, field.min, field.max, field.step)\"\n          @blur=\"handleRangeChange(field.name, data[field.name], field.min, field.max, field.step)\"\n          style=\"width:250px; accent-color: black;\"\n        />\n        <p\n          :id=\"field.name\"\n          class=\"text-gray-600 rounded px-2\"\n          contenteditable=\"true\"\n          @input=\"updateRangeValue(field.name, $event.target.innerText, field.min, field.max, field.step)\"\n          style=\"background-color: #f5f5f5;\"\n        >\n          {{ data[field.name] }}\n        </p>\n        <span v-if=\"rangeErrors[field.name]\" class=\"text-red-500\">{{ rangeErrors[field.name] }}</span>\n      </div>\n      <div v-else-if=\"field.type === 'textbox'\">\n        <FormControl\n          type=\"textarea\"\n          size=\"sm\"\n          variant=\"subtle\"\n          :placeholder=\"__(field.placeholder)\"\n          :disabled=\"false\"\n          v-model=\"data[field.name]\"\n        />\n      </div>\n    </template>\n  </Fields>\n</template>\n\n<script setup>\nimport Fields from '@/components/Fields.vue'\nimport { usersStore } from '@/stores/users'\nimport { reactive, watch, onMounted } from 'vue'\nimport { validateRangeIncrement } from '@/cpqUtils.js'\n\nconst { getUser } = usersStore()\n\nconst props = defineProps({\n  sections: Array,\n  data: Object,\n})\n\n// Reactive object to hold validation errors for range fields\nconst rangeErrors = reactive({})\n\n\n// Update display of range value in the text below the input\nconst updateRangeDisplay = (name, value) => {\n  props.data[name] = value\n  const sizeElement = document.getElementById(name)\n  if (sizeElement) {\n    sizeElement.innerHTML = value\n  }\n}\n\n// Handle range value change and validation\nconst handleRangeChange = (name, value, min, max, step) => {\n  const errorMsg = validateRangeIncrement(name, value, min, max, step)\n  rangeErrors[name] = errorMsg\n  props.data[name] = value\n}\n\n// Update range input from the text below and revalidate\nconst updateRangeValue = (name, value, min, max, step) => {\n  const errorMsg = validateRangeIncrement(name, value, min, max, step)\n  rangeErrors[name] = errorMsg\n  props.data[name] = value\n  const rangeElement = document.getElementsByClassName(name)\n  if (rangeElement.length > 0) {\n    rangeElement[0].value = value\n  }\n}\n\n// Set initial values for range fields when sections change\nconst setInitialValues = () => {\n  for (const section of props.sections) {\n    for (const field of section.fields) {\n      if (field.type === 'Range') {\n        const name = field.name\n        const min = field.min\n        // Set initial value to min if not defined\n        if (props.data[name] === undefined || props.data[name] === null || props.data[name] === '') {\n          props.data[name] = min\n          updateRangeValue(name, min, min, field.max, field.step)\n          updateRangeDisplay(name, min)\n        }\n      }\n    }\n  }\n}\n\nonMounted(() => {\n  watch(\n    () => props.sections,\n    (newValue, oldValue) => {\n      if (newValue !== oldValue && newValue.length > 0) {\n        setInitialValues()\n      }\n    }\n  )\n})\n</script>\n\n<style scoped>\n:deep(.form-control.prefix select) {\n  padding-left: 2rem;\n}\n</style>","<template>\n    <Dialog\n      v-model=\"show\"\n      :options=\"{\n        size: '4xl',\n        title: __('Create Design'),\n      }\"\n    >\n      <template #body-content>\n        <div class=\"mb-4 grid grid-cols-1\">\n          <div class=\"flex items-center gap-3 text-sm text-gray-600\">\n            <div>{{ __('Select Design Type') }}</div>\n            <Select\n              :options=\"designTemplateOptions\"\n              v-model=\"design.design_template\"\n              style=\"width: 200px;\"\n            />\n          </div>\n        </div>\n        <CpqFields class=\"border-t\" :sections=\"sections\" :data=\"design\" @updateField=\"handleFieldUpdate\" />\n        <ErrorMessage class=\"mt-4\" v-if=\"error\" :message=\"__(error)\" />\n      </template>\n      <template #actions>\n        <div class=\"flex flex-row-reverse gap-2\">\n          <Button\n            variant=\"solid\"\n            :label=\"__('Create')\"\n            :loading=\"isDesignCreating\"\n            @click=\"createNewDesign\"\n          />\n        </div>\n      </template>\n    </Dialog>\n  </template>\n  \n  <script setup>\n  import CpqFields from '@/components/CpqFields.vue'\n  import { usersStore } from '@/stores/users'\n  import { statusesStore } from '@/stores/statuses'\n  import { Select } from 'frappe-ui'\n  import { computed, ref, reactive, onMounted, watch } from 'vue'\n  import { useRouter } from 'vue-router'\n  import { call,  createResource} from 'frappe-ui'\n  import { validateRangeIncrement } from '@/cpqUtils.js'\n  import { capture } from '@/telemetry'\n  const { getUser } = usersStore()\n  const { statusOptions } = statusesStore()\n  \n  const show = defineModel()\n  const router = useRouter()\n  const error = ref(null)\n  \n  const design = reactive({\n    created_by: '',\n    design_template: '',\n  })\n  \n  const isDesignCreating = ref(false)\n  const designTemplateOptions = ref([])\n  const fetchedFields = ref([])\n  \n  const sections = computed(() => {\n    const fields = fetchedFields.value.length ? [{\n      section: '',\n      fields: fetchedFields.value\n    }] : []\n  \n    return fields\n  })\n\n  const designStatuses = computed(() => {\n    let statuses = statusOptions('design')\n    if (!design.status) {\n      design.status = statuses[0].value\n    }\n    return statuses\n  })\n  \n  \n  async function fetchDesignTemplates() {\n    try {\n      const message = await call('crm.cpq.doctype.design.api.get_item_variant')\n      designTemplateOptions.value = message\n    } catch (error) {\n      console.error('Error fetching transformer types:', error)\n    }\n  }\n  async function fnFetchItemDetails(itemName) {\n    try {\n      const fields = await call('crm.cpq.doctype.design.api.get_formatted_item_details', {\n        item_name: itemName\n      })\n      fetchedFields.value = fields;\n    } catch (error) {\n      console.error('Error fetching item details:', error);\n    }\n  }\n\n\n  const createDesign = createResource({\n  url: 'frappe.client.insert',\n  makeParams(design) {\n    // Only constructing the parameters for the API request\n    const visibleFields = {};  // Fields for the main doc\n    const designAttributes = [];  // Child table fields\n\n    // Loop through all fields and separate into main doc and child table fields\n    Object.entries(design).forEach(([key, value]) => {\n      const field = fetchedFields.value.find(f => f.name === key);\n      if (['design_template', 'status', 'created_by', 'item'].includes(key)) {\n          visibleFields[key] = value;  // Add to main doc fields\n        }\n      if (field) {\n          designAttributes.push({\n            attribute: field.label,\n            attribute_value: value,\n            numeric_values: field.numeric_values,\n          });  // Add to child table\n      }\n    });\n    \n    // Return the payload for the API request\n    return {\n      doc: {\n        doctype: 'Design',\n        ...visibleFields,  // Spread visible fields for the main document\n        design_attributes: designAttributes,  // Add child table data\n      },\n    };\n  },\n});\n\nasync function createNewDesign() {\n  isDesignCreating.value = true;\n  error.value = null;\n\n  // Perform range validation before submission\n  const rangeErrors = validateRangeFields(fetchedFields.value, design);\n  if (rangeErrors.length > 0) {\n    error.value = `Range validation failed for: ${rangeErrors.map(result => result.name).join(', ')}`;\n    isDesignCreating.value = false;\n    return;\n  }\n\n  // Now submit the design\n  try {\n    await createDesign.submit(design, {\n      validate() {\n        error.value = null;  // Reset error value before submission\n        return true;  // Proceed with submission\n      },\n      onSuccess(response) {\n        capture('design_created');\n        isDesignCreating.value = false;\n        show.value = false;\n        router.push({ name: 'Design', params: { designId: response.name } });\n      },\n      onError(err) {\n        isDesignCreating.value = false;\n        error.value = err.messages ? err.messages.join('\\n') : err.message;\n      },\n    });\n  } catch (err) {\n    isDesignCreating.value = false;\n    error.value = err.message;\n  }\n}\n\n// Function to validate range fields (validation logic outside of makeParams)\nfunction validateRangeFields(fetchedFields, design) {\n  return fetchedFields\n    .filter(field => field.type === 'range')  // Get range fields\n    .map(field => ({\n      name: field.name,\n      error: validateRangeIncrement(field.name, design[field.name], field.min, field.max, field.step),\n    }))\n    .filter(result => result.error !== null);  // Only keep fields with errors\n}\n\n  \n  function handleFieldUpdate({ name, value }) {\n    design[name] = value\n  }\n  \n  onMounted(() => {\n    if (!design.created_by) {\n      design.created_by = getUser().email\n    }\n    fetchDesignTemplates()\n  })\n  \n  watch(() => design.design_template, (newValue, oldValue) => {\n    if (newValue !== oldValue) {\n      fnFetchItemDetails(newValue)\n    }\n  })\n  </script>\n  \n  <style scoped>\n  /* Remove outline for the specific formControl component */\n  .form-control:focus,\n  .form-control:focus-visible {\n    outline: none !important;\n  }\n  </style>","<template>\n  <LayoutHeader>\n    <template #left-header>\n      <Breadcrumbs :items=\"breadcrumbs\" />\n    </template>\n    <template #right-header>\n      <CustomActions\n        v-if=\"designsListView?.customListActions\"\n        :actions=\"designsListView.customListActions\"\n      />\n      <Button\n        variant=\"solid\"\n        :label=\"__('Create')\"\n        @click=\"showDesignModal = true\"\n      >\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </template>\n  </LayoutHeader>\n  <ViewControls\n    ref=\"viewControls\"\n    v-model=\"designs\"\n    v-model:loadMore=\"loadMore\"\n    v-model:resizeColumn=\"triggerResize\"\n    v-model:updatedPageCount=\"updatedPageCount\"\n    doctype=\"Design\"\n  />\n  <DesignsListView\n    ref=\"designsListView\"\n    v-if=\"designs.data && rows.length\"\n    v-model=\"designs.data.page_length_count\"\n    v-model:list=\"designs\"\n    :rows=\"rows\"\n    :columns=\"designs.data.columns\"\n    :options=\"{\n      showTooltip: false,\n      resizeColumn: true,\n      rowCount: designs.data.row_count,\n      totalCount: designs.data.total_count,\n    }\"\n    @loadMore=\"() => loadMore++\"\n    @columnWidthUpdated=\"() => triggerResize++\"\n    @updatePageCount=\"(count) => (updatedPageCount = count)\"\n    @applyFilter=\"(data) => viewControls.applyFilter(data)\"\n  />\n  <div v-else-if=\"designs.data\" class=\"flex h-full items-center justify-center\">\n    <div\n      class=\"flex flex-col items-center gap-3 text-xl font-medium text-gray-500\"\n    >\n      <span>{{ __('No Designs Found') }}</span>\n      <Button :label=\"__('Create')\" @click=\"showDesignModal = true\">\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </div>\n  </div>\n  <DesignModal v-model=\"showDesignModal\" />\n</template>\n\n<script setup>\n\nimport CustomActions from '@/components/CustomActions.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport ViewControls from '@/components/ViewControls.vue'\nimport DesignsListView from '@/components/ListViews/DesignsListView.vue'\nimport DesignModal from '@/components/Modals/DesignModal.vue'\nimport { Breadcrumbs } from 'frappe-ui'\nimport { ref, computed } from 'vue'\n\n\nconst breadcrumbs = [{ label: __('Designs'), route: { name: 'Designs' } }]\nconst designsListView = ref(null)\nconst showDesignModal = ref(false)\n\n// desigs data is loaded in the ViewControls component\nconst designs = ref({})\nconst loadMore = ref(1)\nconst triggerResize = ref(1)\nconst updatedPageCount = ref(20)\nconst viewControls = ref(null)\n\n// Rows\nconst rows = computed(() => {\n  if (!designs.value?.data?.data) return []\n  return designs.value.data.data.map((design) => {\n    let _rows = {}\n    designs.value.data.rows.forEach((row) => {\n      _rows[row] = design[row]\n    })\n    return _rows\n  })\n})\n</script>"],"names":["emit","__emit","route","useRoute","pageLengthCount","_useModel","__props","list","isLikeFilterApplied","computed","_b","_a","user","sessionStore","isLiked","item","watch","val","old_value","listBulkActionsRef","ref","__expose","validateRangeIncrement","name","value","min","max","step","numValue","numMin","numMax","numStep","stepDecimalPlaces","valueDecimalPlaces","usersStore","props","rangeErrors","reactive","updateRangeDisplay","sizeElement","handleRangeChange","errorMsg","updateRangeValue","rangeElement","setInitialValues","section","field","onMounted","newValue","oldValue","getUser","statusOptions","statusesStore","show","router","useRouter","error","design","isDesignCreating","designTemplateOptions","fetchedFields","sections","statuses","fetchDesignTemplates","message","call","fnFetchItemDetails","itemName","fields","createDesign","createResource","visibleFields","designAttributes","key","f","createNewDesign","validateRangeFields","result","response","capture","err","handleFieldUpdate","breadcrumbs","designsListView","showDesignModal","designs","loadMore","triggerResize","updatedPageCount","viewControls","rows","_rows","row"],"mappings":"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"}